// <auto-generated />
using System;
using HOT3.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HOT3.Migrations
{
    [DbContext(typeof(ShopContext))]
    partial class ShopContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HOT3.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Developer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Publisher")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Developer = "Nintendo",
                            Genre = "Action",
                            ImageFileName = "zelda_breath_of_the_wild.jpg",
                            Name = "The Legend of Zelda: Breath of the Wild",
                            Price = 59.99m,
                            Publisher = "Nintendo",
                            Year = 2017
                        },
                        new
                        {
                            Id = 2,
                            Developer = "Santa Monica Studio",
                            Genre = "Action",
                            ImageFileName = "god_of_war.jpg",
                            Name = "God of War",
                            Price = 49.99m,
                            Publisher = "Sony Interactive Entertainment",
                            Year = 2018
                        },
                        new
                        {
                            Id = 3,
                            Developer = "Rockstar Games",
                            Genre = "Action",
                            ImageFileName = "red_dead_redemption_2.jpg",
                            Name = "Red Dead Redemption 2",
                            Price = 59.99m,
                            Publisher = "Rockstar Games",
                            Year = 2018
                        },
                        new
                        {
                            Id = 4,
                            Developer = "CD Projekt Red",
                            Genre = "RPG",
                            ImageFileName = "witcher_3_wild_hunt.jpg",
                            Name = "The Witcher 3: Wild Hunt",
                            Price = 39.99m,
                            Publisher = "CD Projekt",
                            Year = 2015
                        },
                        new
                        {
                            Id = 5,
                            Developer = "Mojang Studios",
                            Genre = "Survival",
                            ImageFileName = "minecraft.jpg",
                            Name = "Minecraft",
                            Price = 26.95m,
                            Publisher = "Mojang Studios",
                            Year = 2011
                        },
                        new
                        {
                            Id = 6,
                            Developer = "EA Vancouver",
                            Genre = "Sports",
                            ImageFileName = "nhl26.jpg",
                            Name = "NHL 26",
                            Price = 69.99m,
                            Publisher = "EA Sports",
                            Year = 2025
                        });
                });

            modelBuilder.Entity("HOT3.Models.Purchase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("HOT3.Models.Purchase", b =>
                {
                    b.HasOne("HOT3.Models.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });
#pragma warning restore 612, 618
        }
    }
}
